/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("cicloclk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ent")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ent[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("ent[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ent";
}

SIGNAL("preset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("saida")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("saida[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saida";
}

SIGNAL("saida[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saida";
}

SIGNAL("saida[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saida";
}

SIGNAL("saida[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saida";
}

SIGNAL("saida[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saida";
}

SIGNAL("saida[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saida";
}

TRANSITION_LIST("cicloclk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 8.95;
		LEVEL 0 FOR 8.95;
		LEVEL 1 FOR 6.55;
	}
}
TRANSITION_LIST("ent[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("ent[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("ent[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 552.0;
		LEVEL 1 FOR 448.0;
	}
}
TRANSITION_LIST("ent[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 276.0;
		LEVEL 1 FOR 276.0;
		LEVEL 0 FOR 276.0;
		LEVEL 1 FOR 172.0;
	}
}
TRANSITION_LIST("ent[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 138.0;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 138.0;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 138.0;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 34.0;
	}
}
TRANSITION_LIST("ent[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 69.0;
		LEVEL 0 FOR 34.0;
	}
}
TRANSITION_LIST("preset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 47.32;
		LEVEL 0 FOR 47.32;
		LEVEL 1 FOR 6.28;
	}
}
TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 78.0;
		LEVEL 0 FOR 64.0;
	}
}
TRANSITION_LIST("saida[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("saida[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("saida[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 581.75;
		LEVEL 1 FOR 33.41;
		LEVEL 0 FOR 56.09;
		LEVEL 1 FOR 38.55;
		LEVEL 0 FOR 50.95;
		LEVEL 1 FOR 43.69;
		LEVEL 0 FOR 63.71;
		LEVEL 1 FOR 30.93;
		LEVEL 0 FOR 58.57;
		LEVEL 1 FOR 36.07;
		LEVEL 0 FOR 6.28;
	}
}
TRANSITION_LIST("saida[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.35;
		LEVEL 1 FOR 35.89;
		LEVEL 0 FOR 53.61;
		LEVEL 1 FOR 41.03;
		LEVEL 0 FOR 48.47;
		LEVEL 1 FOR 46.17;
		LEVEL 0 FOR 347.63;
		LEVEL 1 FOR 30.93;
		LEVEL 0 FOR 58.57;
		LEVEL 1 FOR 36.07;
		LEVEL 0 FOR 6.28;
	}
}
TRANSITION_LIST("saida[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.85;
		LEVEL 1 FOR 30.75;
		LEVEL 0 FOR 184.05;
		LEVEL 1 FOR 5.23;
		LEVEL 0 FOR 48.47;
		LEVEL 1 FOR 46.17;
		LEVEL 0 FOR 186.53;
		LEVEL 1 FOR 2.75;
		LEVEL 0 FOR 50.95;
		LEVEL 1 FOR 43.69;
		LEVEL 0 FOR 171.11;
		LEVEL 1 FOR 18.17;
		LEVEL 0 FOR 6.28;
	}
}
TRANSITION_LIST("saida[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 98.45;
		LEVEL 1 FOR 43.51;
		LEVEL 0 FOR 81.79;
		LEVEL 1 FOR 12.85;
		LEVEL 0 FOR 148.25;
		LEVEL 1 FOR 35.8;
		LEVEL 0 FOR 71.6;
		LEVEL 1 FOR 28.27;
		LEVEL 0 FOR 150.73;
		LEVEL 1 FOR 35.8;
		LEVEL 0 FOR 53.7;
		LEVEL 1 FOR 43.69;
		LEVEL 0 FOR 153.21;
		LEVEL 1 FOR 17.9;
		LEVEL 0 FOR 24.45;
	}
}


DISPLAY_LINE
{
	CHANNEL = "cicloclk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ent";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "ent[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ent[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ent[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ent[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ent[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ent[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "preset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "saida";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "saida[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "saida[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "saida[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "saida[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "saida[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "saida[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
